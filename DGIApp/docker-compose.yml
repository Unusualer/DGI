version: '3.8'

services:
  # Spring Boot backend
  backend:
    build: ./backend
    container_name: dgi-backend
    environment:
      # Use host.docker.internal to connect to the host's PostgreSQL
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/dgiapp
      SPRING_DATASOURCE_USERNAME: dgiapp
      SPRING_DATASOURCE_PASSWORD: Rm9c7@Bn.YM4Z!rE
      SPRING_SQL_INIT_MODE: never
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: "false"
      JWT_SECRET: ${JWT_SECRET:-G4r8LWYZBYvBgNoRq92kMPeQmA2uRCrV3NyRWH7bJDbC4rjMEWTzZ3RNvcj6sXwK}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-*}
      LOG_LEVEL_SPRING_SECURITY: ${LOG_LEVEL_SPRING_SECURITY:-INFO}
      LOG_LEVEL_APP: ${LOG_LEVEL_APP:-INFO}
      LOG_LEVEL_HIBERNATE_SQL: ${LOG_LEVEL_HIBERNATE_SQL:-INFO}
      LOG_LEVEL_HIBERNATE_BINDER: ${LOG_LEVEL_HIBERNATE_BINDER:-INFO}
      LOG_LEVEL_JWT: ${LOG_LEVEL_JWT:-INFO}
      LOG_LEVEL_SERVICES: ${LOG_LEVEL_SERVICES:-INFO}
    # Ensure host.docker.internal works on all platforms
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "8080:8080"
    networks:
      - dgi-network
    restart: unless-stopped

  # React frontend
  frontend:
    build: ./frontend
    container_name: dgi-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - dgi-network
    restart: unless-stopped

  ollama:
    image: ollama/ollama:latest
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - dgi-network
    restart: unless-stopped

networks:
  dgi-network:
    driver: bridge

volumes:
  ollama_data:
